Data {
  int S
  real<lower=0> M[S]
  int N1[S]
  int N0[S]
  int n1[S]
}


Param {
  real<lower=0,upper=1> v[S]
  real<lower=0> mu
  real phi[S]
  real<lower=0> sig2
  real<lower=0> m[S]
  real<lower=0> w2
}

PreCompute-Data {
  z[s] = log(M[s])
  ...
}

Likelihood {
  log(M[s]) | m[s], w2 ~ Normal( log(m[s]), w2 )
  n1[s] | N1[s], p[s] ~ Binom(N1[s], p[s])
  log(N1[s]/N0[s]) | m[s], sig2, mu ~ Normal(z[s], sig2)
} where {
  p[s] = (mu*v[s]*m[s]) / (2*(1-mu)+mu*m[s])
  z[s] = log((2*(1-mu)+mu*m[s])/2)+phi[s]
}


Prior {
  v[s] | G ~ G ~ DP(alpha, G0=Beta(aG,bG))
  mu ~ Beta(aMu, bMu)
  phi[s] ~ Normal(mPhi, s2Phi)
  sig2 ~ InvGamma(aSig, bSig)
  m[s] ~ Gamma(aM, bM)
  w2 ~ InvGamma(aW, bW)
}

